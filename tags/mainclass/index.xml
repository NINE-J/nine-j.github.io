<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MainClass on B9F1</title><link>https://b9f1.com/tags/mainclass/</link><description>Recent content in MainClass on B9F1</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Jan 2025 00:00:00 +0900</lastBuildDate><atom:link href="https://b9f1.com/tags/mainclass/index.xml" rel="self" type="application/rss+xml"/><item><title>Java의 main 클래스</title><link>https://b9f1.com/p/2025-01-05-main-class-of-java/</link><pubDate>Sun, 05 Jan 2025 00:00:00 +0900</pubDate><guid>https://b9f1.com/p/2025-01-05-main-class-of-java/</guid><description>&lt;img src="https://b9f1.com/p/2025-01-05-main-class-of-java/cover.png" alt="Featured image of post Java의 main 클래스" /&gt;&lt;h2 id="개요"&gt;📌개요
&lt;/h2&gt;&lt;p&gt;Java의 &lt;code&gt;public static void main(String[] args)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="내용"&gt;📌내용
&lt;/h2&gt;&lt;p&gt;Java 프로젝트를 생성하고 IDE에서 제공하는 메인 템플릿을 생성하게 되면 아래와 같은 코드를 확인할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;백준&lt;/code&gt; 같은 알고리즘 풀이 사이트에선 채점 시 제출한 코드를 &lt;code&gt;Main.java&lt;/code&gt;로 가정하여 받는다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SampleProject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;link rel="stylesheet" href="https://b9f1.com/css/vendors/admonitions.5c21d3611305826ca76e50bf22bdda6ed74f2f81d26216e9166f9ae104f2e27a.css" integrity="sha256-XCHTYRMFgmynblC/Ir3abtdPL4HSYhbpFm&amp;#43;a4QTy4no=" crossorigin="anonymous"&gt;
&lt;div class="admonition info"&gt;
&lt;div class="admonition-header"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"&gt;&lt;path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"/&gt;&lt;/svg&gt;
&lt;span&gt;Info&lt;/span&gt;
&lt;/div&gt;
&lt;div class="admonition-content"&gt;
&lt;p&gt;Java 는 애플리케이션이 실행되면 제일 먼저 메인(main)메소드를 실행한다.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Java에서 &lt;code&gt;public static void main(String[] args)&lt;/code&gt; 메서드의 형태가 항상 동일한 이유는 &lt;strong&gt;Java 언어 명세&lt;/strong&gt;에 명시되어 있기 때문이다.
이는 Java 프로그램의 시작 지점을 정의하기 위한 약속(규약, convention)이다.&lt;/p&gt;
&lt;h2 id="왜-main-메서드의-형태가-고정되어-있을까"&gt;📌왜 &lt;code&gt;main&lt;/code&gt; 메서드의 형태가 고정되어 있을까?
&lt;/h2&gt;&lt;h3 id="jvmjava-virtual-machine의-요구-사항"&gt;JVM(Java Virtual Machine)의 요구 사항
&lt;/h3&gt;&lt;p&gt;Java 프로그램은 JVM에서 실행되며, JVM은 프로그램의 시작 지점을 찾기 위해 특정 형태의 메서드를 탐색한다.
이때 &lt;code&gt;main&lt;/code&gt; 메서드는 반드시 아래와 같은 조건을 만족해야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;public&lt;/code&gt;: JVM이 프로그램 외부에서 호출할 수 있어야 함.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt;: JVM이 클래스의 인스턴스를 생성하지 않고도 호출할 수 있어야 함.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void&lt;/code&gt;: 반환값이 필요하지 않음. 프로그램의 시작점으로 동작하기 때문.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String[] args&lt;/code&gt;: 명령줄 인수를 받을 수 있어야 함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="java-언어-명세-java-language-specification-jls"&gt;Java 언어 명세 (Java Language Specification, JLS)
&lt;/h3&gt;&lt;p&gt;JLS의 &lt;strong&gt;12.1.4 &amp;ldquo;Invoke the main Method&amp;rdquo;&lt;/strong&gt; 섹션에 이 규칙이 명시되어 있다.
JVM은 실행 시 지정된 클래스에서 다음과 같은 메서드를 찾아 호출한다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="일관성-및-예측-가능성"&gt;일관성 및 예측 가능성
&lt;/h3&gt;&lt;p&gt;프로그램의 진입점을 표준화함으로써 개발자들이 Java 프로그램의 구조를 쉽게 이해할 수 있다.
다른 사람이 작성한 코드를 보더라도 어디에서 실행이 시작되는지 즉시 알 수 있다.&lt;/p&gt;
&lt;h2 id="변경하면-안-될까"&gt;📌변경하면 안 될까?
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;접근 제한자 변경: &lt;code&gt;private&lt;/code&gt; 또는 &lt;code&gt;protected&lt;/code&gt;로 바꾸면 JVM이 메서드를 찾지 못하고 &lt;code&gt;NoSuchMethodError&lt;/code&gt;가 발생한다.&lt;/li&gt;
&lt;li&gt;static 제거: JVM은 클래스 인스턴스를 생성하지 않으므로 &lt;code&gt;static&lt;/code&gt;이 없으면 호출할 수 없다.&lt;/li&gt;
&lt;li&gt;매개변수 변경: &lt;code&gt;String[] args&lt;/code&gt; 대신 다른 매개변수를 사용하면 JVM이 인식하지 못한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="예외-사항"&gt;📌예외 사항
&lt;/h2&gt;&lt;h3 id="overloading"&gt;Overloading
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;main&lt;/code&gt; 메서드는 오버로딩할 수 있다.&lt;/p&gt;
&lt;div class="admonition warning"&gt;
&lt;div class="admonition-header"&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"&gt;&lt;path d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"/&gt;&lt;/svg&gt;
&lt;span&gt;Warning&lt;/span&gt;
&lt;/div&gt;
&lt;div class="admonition-content"&gt;
&lt;p&gt;그러나 JVM은 여전히 &lt;code&gt;public static void main(String[] args)&lt;/code&gt;를 실행한다.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;span class="lnt"&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SampleProject&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;This won&amp;#39;t be called by JVM!&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="entry-point-변경"&gt;Entry Point 변경
&lt;/h3&gt;&lt;p&gt;Java 11 이상에서는 &lt;code&gt;public static void main(String[] args)&lt;/code&gt; 없이도 &lt;code&gt;java.util.function&lt;/code&gt; 인터페이스를 활용하여 프로그램을 실행할 수 있다.
예를 들어, &lt;code&gt;java -cp . MyProgram&lt;/code&gt; 형태로 실행 가능하다.&lt;/p&gt;
&lt;h2 id="결론"&gt;📌결론
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;public static void main(String[] args)&lt;/code&gt;는 Java의 규약이며, Java 언어 명세에 명시된 내용이다.
이 형태를 따르지 않으면 JVM이 프로그램의 진입점을 찾을 수 없으므로 반드시 이 구조를 따라야 한다.&lt;/p&gt;
&lt;h2 id="endnote"&gt;⚙️EndNote
&lt;/h2&gt;&lt;h3 id="main-메서드의-구성-요소"&gt;main 메서드의 구성 요소
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;public&lt;/code&gt; (공개 접근 제어자)
&lt;ul&gt;
&lt;li&gt;JVM이 프로그램을 실행할 때 &lt;code&gt;main&lt;/code&gt; 메서드를 호출해야 하므로, 외부에서 접근 가능하도록 &lt;code&gt;public&lt;/code&gt;이어야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt; (정적 메서드)
&lt;ul&gt;
&lt;li&gt;Java에서 메서드를 호출하려면 일반적으로 객체를 생성해야 하지만, &lt;code&gt;main&lt;/code&gt;은 프로그램 시작점이므로 객체 없이 호출 가능해야 한다.&lt;/li&gt;
&lt;li&gt;따라서 &lt;code&gt;static&lt;/code&gt;으로 선언하여 JVM이 클래스 로딩 후 바로 실행할 수 있도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void&lt;/code&gt; (반환 값 없음)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt; 메서드는 실행이 목적이므로 별도의 반환 값이 필요하지 않다.
&lt;ul&gt;
&lt;li&gt;필요한 경우 상황에 맞게 변경하여 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;프로그램 종료 상태는 &lt;code&gt;System.exit(status)&lt;/code&gt;를 통해 반환할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String[] args&lt;/code&gt; (명령행 인자)
&lt;ul&gt;
&lt;li&gt;프로그램 실행 시 전달되는 명령행 인자(Arguments)를 배열로 받는다.&lt;/li&gt;
&lt;li&gt;예를 들어, &lt;code&gt;java Main hello world&lt;/code&gt; 명령어를 실행하면 &lt;code&gt;args[0] = &amp;quot;hello&amp;quot;&lt;/code&gt;, &lt;code&gt;args[1] = &amp;quot;world&amp;quot;&lt;/code&gt;가 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>